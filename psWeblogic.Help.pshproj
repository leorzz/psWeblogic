<?xml version="1.0"?>
<ModuleObject xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" fVersion="1.1" type="Script" mclass="External" useSupports="true">
  <Name>psWeblogic</Name>
  <Version>0.0</Version>
  <Description>Author: Leonardo Rizzi - TJRS|DTIC|DPROD</Description>
  <HasManifest>false</HasManifest>
  <OverridePostCount>false</OverridePostCount>
  <FetchPostCount xsi:nil="true" />
  <Cmdlets>
    <CmdletObject verb="Get" noun="WLCacheIndex">
      <Name>Get-WLCacheIndex</Name>
      <Syntax>
        <string>Get-WLCacheIndex</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Show current cache index.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="" />
      </ParamSets>
      <Parameters />
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLCacheIndex | Format-Table</Cmd>
          <Description />
          <Output>Uri                                                                        ValidTo             FullName                                  
---                                                                        -------             --------                                  
https://wls-infra.tjrs.local.com:443/management/wls/latest/servers     02/03/2016 10:03:54 C:\Users\user01\AppData\Local\Temp\w...
https://wls-infra.tjrs.local.com:443/management/wls/latest/datasources 02/03/2016 10:04:12 C:\Users\user01\AppData\Local\Temp\w...</Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLCacheIndex</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLCacheIndex-Header</LinkUrl>
        </RelatedLink>
        <RelatedLink>
          <LinkText />
          <LinkUrl />
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Get-WLCacheIndex</URL>
      <ArticleIDString>696114</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLCluster">
      <Name>Get-WLCluster</Name>
      <Syntax>
        <string>Get-WLCluster [-InputObject &lt;PSObject&gt;] [-AdminServer &lt;List`1[String]&gt;] [[-Name] &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Cache] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get cluster object from a domain.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="InputObject" Params="InputObject AdminServer Name Credential SecureConnection Cache TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="true">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter clusters by Name. (regex)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue>Get-WLCredential -Alias Default</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue>True</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Cache</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>User to bypass cache results. Use -Cache:$False</Description>
          <DefaultValue>True</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLCluster -AdminServer wls.desenv.tjrs.local.com -Credential (Get-WLCredential -Alias myCred)

</Cmd>
          <Description>Return monitoring data.
This example use alternative stored credential.</Description>
          <Output>Name            Servers                                                             AdminServer                 
----            -------                                                             -----------                 
infra-desenv-01 {@{name=infra-des-31.tjrs.local.com; state=RUNNING; health=HEALTH_OK}} wls-infra.desenv.tjrs.local.com
infra-desenv-02 {@{name=infra-des-32.tjrs.local.com; state=RUNNING; health=HEALTH_OK}} wls-infra.desenv.tjrs.local.com</Output>
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Get-WLDomain DES-INFRA | Get-WLCluster</Cmd>
          <Description>Return monitoring data getting domain value from pipeline.
This example use adminserver information from pipe and default credential previously stored with 'default' alias name.</Description>
          <Output>Name            Servers                                                             AdminServer                 
----            -------                                                             -----------                 
infra-desenv-01 {@{name=infra-des-31.tjrs.local.com; state=RUNNING; health=HEALTH_OK}} wls-infra.desenv.tjrs.local.com
infra-desenv-02 {@{name=infra-des-32.tjrs.local.com; state=RUNNING; health=HEALTH_OK}} wls-infra.desenv.tjrs.local.com</Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLCluster</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLCluster-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <ExtraHeader />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Get-WLCluster</URL>
      <ArticleIDString>696115</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLDatasource">
      <Name>Get-WLDatasource</Name>
      <Syntax>
        <string>Get-WLDatasource [-AdminServer &lt;List`1[String]&gt;] [[-Name] &lt;String[]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Cache] [-Management] [-TimeoutSec &lt;Int32&gt;]</string>
        <string>Get-WLDatasource [[-Name] &lt;String[]&gt;] [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Cache] [-Management] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get datasource object from a domain.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer Name Credential SecureConnection Cache Management TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
        <CommandParameterSetInfo2 Name="InputObject" Params="Name InputObject Credential SecureConnection Cache Management TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue>(Get-WLCredential -Alias Default)</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue>True</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Cache</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>User to bypass cache results. Use -Cache:$False</Description>
          <DefaultValue>True</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter datasource by name.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Management</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLDatasource -AdminServer wls01.desenv.tjrs.local.com -Management</Cmd>
          <Description>Get management objects of all datasources from a domain.
This example use default credential previously stored with 'default' alias name.</Description>
          <Output>Name        Targets                           
----        -------                           
jdbc/ds1   {infra-desenv-01, infra-desenv-02}
jdbc/ds2   {infra-desenv-01}</Output>
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Get-WLDomain -AdminServer wls01.desenv.tjrs.local.com | Get-WLDatasource
This example use adminserver information from pipe and default credential previously stored with 'default' alias name.</Cmd>
          <Description />
          <Output>Name        Type   
----        ----   
jdbc/ds1 Generic
jdbc/ds2   Generic</Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLDatasource</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLDatasource-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Get-WLDatasource</URL>
      <ArticleIDString>696116</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLDeployment">
      <Name>Get-WLDeployment</Name>
      <Syntax>
        <string>Get-WLDeployment [-AdminServer &lt;List`1[String]&gt;] [[-Name] &lt;String[]&gt;] [-Credential &lt;PSCredential&gt;] [-Type &lt;String&gt; {application | library} ] [-SecureConnection] [-Cache] [-Management] [-TimeoutSec &lt;Int32&gt;]</string>
        <string>Get-WLDeployment [[-Name] &lt;String[]&gt;] [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-Type &lt;String&gt; {application | library} ] [-SecureConnection] [-Cache] [-Management] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get deployment object from a domain.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer Name Credential Type SecureConnection Cache Management TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
        <CommandParameterSetInfo2 Name="InputObject" Params="Name InputObject Credential Type SecureConnection Cache Management TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Type</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateSetAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter deployment by type "application or library". When using this parameter the result may contain attributes specific to each type.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Cache</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>User to bypass cache results. Use -Cache:$False</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter deployment by name.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Management</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLDeployment -AdminServer wls01.desenv.tjrs.local.com -Management</Cmd>
          <Description>Get management objects of all deployments from a domain.
This example use default credential previously stored with 'default' alias name.</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Get-WLDatasource -AdminServer wls01.prod.tjrs.local.com -Management | % {$_.test()} | select -ExpandProperty messages</Cmd>
          <Description>Rua a test of all datasoucers in a domain.</Description>
          <Output>message                                                                                    severity
-------                                                                                    --------
Data Source 'jdbc/ds01' is working correctly.                                              SUCCESS 
Data Source 'jdbc/ds02' is working correctly.                                              SUCCESS 
Data Source 'jdbc/ds03'. The remote server returned an error: (400) Bad Request.           ERROR   </Output>
        </Example>
        <Example>
          <Name>Example 3</Name>
          <Cmd>Get-WLDatasource -AdminServer wls01.tjrs.local.com -Management | % {$_.Reset()} | select -ExpandProperty messages</Cmd>
          <Description>Restarts all datasouces a domain.</Description>
          <Output>message                                                  severity
-------                                                  --------
Data Source 'jdbc/ds01' was successfully reset.          SUCCESS 
Data Source 'jdbc/ds02' was successfully reset.          SUCCESS </Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLDeployment</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLDeployment-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Get-WLDeployment</URL>
      <ArticleIDString>696117</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLDomain">
      <Name>Get-WLDomain</Name>
      <Syntax>
        <string>Get-WLDomain [-AdminServer &lt;String[]&gt;] [[-Name] &lt;String[]&gt;] [-Cache] [-Environment &lt;String[]&gt;] [-Version &lt;Version[]&gt;] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get domain object.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="AdminServer Name Cache Environment Version TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filters by AdminServer. Use the DNS name.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter by domain name. Use the short domain name.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Cache</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>User to bypass cache results. Use -Cache:$False</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Environment</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter results by environment.
This parameter is the environment field registered in the inventory.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Version[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Version</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filters the domain version. Use the Semantic Versioning as well as "12.1.3"</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLDomain | select -First 2</Cmd>
          <Description />
          <Output>Name            : wls01
AdminServer     : wls01.desenv.tjrs.local.com
AdminTcpPort    : 7304
AdminTcpPortSec : 443
Version         : 12.1.3
Environment      : Desenv
ResourceType    : domain

Name            : wls01
AdminServer     : wls01.desenv.tjrs.local.com
AdminTcpPort    : 7304
AdminTcpPortSec : 443
Version         : 12.1.3
Environment      : Desenv
ResourceType    : domain</Output>
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Get-WLDomain -Name wls | ft
</Cmd>
          <Description />
          <Output>Name             AdminServer                    AdminTcpPort AdminTcpPortSec Version Environment ResourceType
----             -----------                    ------------ --------------- ------- ---------- ------------
wls01         wls01.desenv.tjrs.local.com           7304 443             12.1.3  Desenv     domain      
wls02         wls02.desenv.tjrs.local.com           7304 443             12.1.3  Desenv     domain      </Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLDomain</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLDomain-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Get-WLDomain</URL>
      <ArticleIDString>696118</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLjob">
      <Name>Get-WLjob</Name>
      <Syntax>
        <string>Get-WLjob [-AdminServer &lt;String[]&gt;] [-SecureConnection] [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-Cache] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get job object from a domain.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="InputObject" Params="AdminServer SecureConnection InputObject Credential Cache TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Cache</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>User to bypass cache results. Use -Cache:$False</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLjob</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLjob-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Get-WLjob</URL>
      <ArticleIDString>696119</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLServer">
      <Name>Get-WLServer</Name>
      <Syntax>
        <string>Get-WLServer [-AdminServer &lt;List`1[String]&gt;] [[-Name] &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-IncludeAdminServer] [-Cache] [-Management] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>Get-WLServer [-InputObject &lt;PSObject&gt;] [-AdminServer &lt;List`1[String]&gt;] [[-Name] &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-IncludeAdminServer] [-Cache] [-Management] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>Get-WLServer [-AdminServer &lt;List`1[String]&gt;] [[-Name] &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-IncludeAdminServer] [-Cache] [-Management] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get server object from a domain.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="Parameter Set 1" Params="AdminServer Name Credential SecureConnection IncludeAdminServer Cache Management TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="InputObject" Params="InputObject AdminServer Name Credential SecureConnection IncludeAdminServer Cache Management TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer Name Credential SecureConnection IncludeAdminServer Cache Management TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter servers by Name. (regex)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Cache</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>User to bypass cache results. Use -Cache:$False</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>IncludeAdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to include AdminServer in the result.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Management</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLServer</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLServer-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Get-WLServer</URL>
      <ArticleIDString>696120</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLTarget">
      <Name>Get-WLTarget</Name>
      <Syntax>
        <string>Get-WLTarget [-AdminServer &lt;String[]&gt;] [[-Name] &lt;String[]&gt;] [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-Type &lt;String&gt; {cluster | server} ] [-SecureConnection] [-Cache] [-Management] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get target object from a domain.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="AdminServer Name InputObject Credential Type SecureConnection Cache Management TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter targets by Name. (regex)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Type</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateSetAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter Target by type. (Server or Cluster)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Cache</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>User to bypass cache results. Use -Cache:$False</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Management</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLTarget</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLTarget-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Get-WLTarget</URL>
      <ArticleIDString>696121</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="New" noun="WLCredential">
      <Name>New-WLCredential</Name>
      <Syntax>
        <string>New-WLCredential [[-UserName] &lt;String&gt;] [[-Password] &lt;SecureString&gt;] [-Name] &lt;String&gt; [-Path &lt;String&gt;] [-Force]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Create new credential to AdminServer and store into user profile.</Synopsis>
        <Description>Create a new credential and stored in your profile under $env:APPDATA\psWeblogic\security
If you create a credential with alias ' Default' then you need not inform it in cmdlets that already will locate it automatically .</Description>
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="UserName Password Name Path Force Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="0" globbing="false">
          <Name>UserName</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use username to the new credential.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Path</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Optionally use an alternative way to store the new credentials .</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Force</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>If a credential with the same alias exists this parameter forced to overwritten .</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SecureString" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Password</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Type your password</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="true" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="2" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Alias</string>
          </Aliases>
          <Description>Use a name to identify this credential.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>New-WLCredential -UserName weblogic -Name Default</Cmd>
          <Description>Creates a default credential to be used automatically whenever the -Credential parameter is not informed .
The password is required to execute this command</Description>
          <Output>Alias        : Default
CreationTime : 29/02/2016 17:24:49
UserName     : weblogic
Password     : System.Security.SecureString</Output>
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>New-WLCredential -Name cred01 -UserName user01</Cmd>
          <Description>Create a credential to user user01</Description>
          <Output>Alias  CreationTime        UserName                     Password
-----  ------------        --------                     --------
user01 08/03/2016 12:16:08 user01   System.Security.SecureString</Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>New-WLCredential</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#New-WLCredential-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=New-WLCredential</URL>
      <ArticleIDString>696122</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Remove" noun="WLCredential">
      <Name>Remove-WLCredential</Name>
      <Syntax>
        <string>Remove-WLCredential [-Name] &lt;String&gt; [-Path &lt;String&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Remove weblogic credential stored at default or alternative path.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="Name Path Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Path</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="true" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="true" isPos="true" pos="1" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Alias</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Remove-WLCredential -Name user01</Cmd>
          <Description>Remove stored credential width alias user01.</Description>
          <Output />
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Remove-WLCredential</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Remove-WLCredential-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Remove-WLCredential</URL>
      <ArticleIDString>696113</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Repair" noun="WLCacheIndex">
      <Name>Repair-WLCacheIndex</Name>
      <Syntax>
        <string>Repair-WLCacheIndex</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Rebuild the index cache to current powershell session.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="" />
      </ParamSets>
      <Parameters />
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Repair-WLCacheIndex</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Repair-WLCacheIndex-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Repair-WLCacheIndex</URL>
      <ArticleIDString>696123</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Start" noun="WLServer">
      <Name>Start-WLServer</Name>
      <Syntax>
        <string>Start-WLServer [-InputObject &lt;PSObject&gt;] [-AdminServer &lt;List`1[String]&gt;] [[-Name] &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-ResumeOnly] [-Throttling &lt;Int32&gt;] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Changes the lifecycle of the server object to running.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="InputObject" Params="InputObject AdminServer Name Credential ResumeOnly Throttling TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter server objects. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter servers by Name. (regex)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ResumeOnly</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>It only start the server if it is in Suspend mode.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Throttling</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>It regulates the number of objects that will be executed in parallel.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLServer -AdminServer wls01.tjrs.local.com | Start-WLServer -Throttling 2</Cmd>
          <Description>Start  managed servers on wls01.tjrs.local.com domain. Two at a time.
This example use adminserver information from pipe and default credential previously stored with 'default' alias name.</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Get-WLCluster -AdminServer wls01.tjrs.local.com -Name cluster01 | Start-WLServer</Cmd>
          <Description>Start all managed servers on weblogic cluster 'cluster01'.
This example use adminserver information from pipe and default credential previously stored with 'default' alias name.</Description>
          <Output />
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Start-WLServer</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Start-WLServer-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Start-WLServer</URL>
      <ArticleIDString>696124</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Stop" noun="WLServer">
      <Name>Stop-WLServer</Name>
      <Syntax>
        <string>Stop-WLServer [-InputObject &lt;PSObject&gt;] [-AdminServer &lt;List`1[String]&gt;] [[-Name] &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-SuspendOnly] [-Force] [-Throttling &lt;Int32&gt;] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Changes the lifecycle of the server object to shutdown.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="InputObject" Params="InputObject AdminServer Name Credential SuspendOnly Force Throttling TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter server objects. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter servers by Name. (regex)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SuspendOnly</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>It only suspends the server without stopping it.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Force</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Force the server to stop.
If using this parameter the server will wait for the closing of all the active sessions.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Throttling</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>It regulates the number of objects that will be executed in parallel.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLServer -AdminServer wls01.tjrs.local.com | Stop-WLServer -Throttling 2</Cmd>
          <Description>Stop  managed servers on wls01.tjrs.local.com domain. Two at a time.
This example use adminserver information from pipe and default credential previously stored with 'default' alias name.</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Get-WLCluster -AdminServer wls01.tjrs.local.com -Name cluster01 | Stop-WLServer</Cmd>
          <Description>Stop all managed servers on weblogic cluster 'cluster01'.
This example use adminserver information from pipe and default credential previously stored with 'default' alias name.</Description>
          <Output />
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Stop-WLServer</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Stop-WLServer-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Stop-WLServer</URL>
      <ArticleIDString>696125</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLCredential">
      <Name>Get-WLCredential</Name>
      <Syntax>
        <string>Get-WLCredential [[-Name] &lt;String&gt;] [-Path &lt;String&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get weblogic credential stored at default or alternative path.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="Name Path Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Path</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use alternative path.</Description>
          <DefaultValue>$env:APPDATA\psWeblogic\security</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="0" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases>
            <string>Alias</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLCredential</Cmd>
          <Description>Get all stored credentials.</Description>
          <Output>Alias   CreationTime        UserName                       Password
-----   ------------        --------                       --------
Default 29/02/2016 17:24:49 weblogic   System.Security.SecureString
myCred  01/03/2016 17:47:06 mike       System.Security.SecureString
user01  08/03/2016 12:16:08 user01     System.Security.SecureString
</Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLCredential</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLCredential-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Get-WLCredential</URL>
      <ArticleIDString>696126</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="New" noun="WLDatasource">
      <Name>New-WLDatasource</Name>
      <Syntax>
        <string>New-WLDatasource [-AdminServer &lt;String&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Name &lt;String&gt;] [-Url &lt;String&gt;] [-InputPasswordAsObject &lt;PSObject&gt;] [-InputUrlAsObject &lt;PSObject&gt;] [-Targets &lt;String[]&gt;] [-JndiNames &lt;String[]&gt;] [-DsCredential &lt;PSCredential&gt;] [-MinCapacity &lt;Int32&gt;] [-MaxCapacity &lt;Int32&gt;] [-InitialCapacity &lt;Int32&gt;] [-DsUser &lt;String&gt;] [-DsPassword &lt;SecureString&gt;] [-SkeepChecks] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>New-WLDatasource [-AdminServer &lt;String&gt;] [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Name &lt;String&gt;] [-Url &lt;String&gt;] [-InputPasswordAsObject &lt;PSObject&gt;] [-InputUrlAsObject &lt;PSObject&gt;] [-Targets &lt;String[]&gt;] [-JndiNames &lt;String[]&gt;] [-DsCredential &lt;PSCredential&gt;] [-MinCapacity &lt;Int32&gt;] [-MaxCapacity &lt;Int32&gt;] [-InitialCapacity &lt;Int32&gt;] [-DsUser &lt;String&gt;] [-DsPassword &lt;SecureString&gt;] [-SkeepChecks] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>New-WLDatasource [-AdminServer &lt;String&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Name &lt;String&gt;] [-Url &lt;String&gt;] [-InputPasswordAsObject &lt;PSObject&gt;] [-InputUrlAsObject &lt;PSObject&gt;] [-DatasourceType &lt;String&gt; {Generic | Multi} ] [-Targets &lt;String[]&gt;] [-JndiNames &lt;String[]&gt;] [-DsCredential &lt;PSCredential&gt;] [-MinCapacity &lt;Int32&gt;] [-MaxCapacity &lt;Int32&gt;] [-InitialCapacity &lt;Int32&gt;] [-DsUser &lt;String&gt;] [-DsPassword &lt;SecureString&gt;] [-SkeepChecks] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Create a new Datasource.</Synopsis>
        <Description>A datasource can be created from template, response file or other datasource.</Description>
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="Default" Params="AdminServer Credential SecureConnection Name Url InputPasswordAsObject InputUrlAsObject Targets JndiNames DsCredential MinCapacity MaxCapacity InitialCapacity DsUser DsPassword SkeepChecks TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="InputObject" Params="AdminServer InputObject Credential SecureConnection Name Url InputPasswordAsObject InputUrlAsObject Targets JndiNames DsCredential MinCapacity MaxCapacity InitialCapacity DsUser DsPassword SkeepChecks TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="DatasourceType" Params="AdminServer Credential SecureConnection Name Url InputPasswordAsObject InputUrlAsObject DatasourceType Targets JndiNames DsCredential MinCapacity MaxCapacity InitialCapacity DsUser DsPassword SkeepChecks TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Name to new datasource.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>DsUser</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use the database username to datasource.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SecureString" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>DsPassword</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>User the database password to datasource.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Targets</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use the target where the new datasource will be applied.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>JndiNames</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use the JNDI name to this datasource. If not specified it will be the same as the name parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Url</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use the Url (connection string) to be used in the new datasource.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputPasswordAsObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use a object or a set of objects[name=&lt;datasource name&gt;, password=&lt;SecureString&gt;]
That is, at a minimum the attributes name=&lt;datasource name&gt; and password=&lt;SecureString&gt;</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputUrlAsObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>DsCredential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>MinCapacity</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>MaxCapacity</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InitialCapacity</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SkeepChecks</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>DatasourceType</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateSetAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>$dsTemplate = Get-WLDatasource -AdminServer wls01.desenv.tjrs.local.com -Management -Name jdbc/ds01
$dsTemplate.targets = @("server01","cluster02")
$dsTemplate | New-WLDatasource -AdminServer wls02.desenv.tjrs.local.com</Cmd>
          <Description>Takes a datasource as a model.
Changes targets property. 
</Description>
          <Output>Name     : jdbc/ds01
Targets  : {infra-desenv-01}
Messages : {@{message=Successfully created 'jdbc/ds01'.; severity=SUCCESS}}</Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>New-WLDatasource</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#New-WLDatasource-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=New-WLDatasource</URL>
      <ArticleIDString>696127</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Restart" noun="WLServer">
      <Name>Restart-WLServer</Name>
      <Syntax>
        <string>Restart-WLServer [-Force] [-Throttling &lt;Int32&gt;] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>Restart-WLServer [-InputObject &lt;PSObject&gt;] [-Force] [-Throttling &lt;Int32&gt;] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>Restart-WLServer [-AdminServer &lt;List`1[String]&gt;] [-Name &lt;List`1[String]&gt;] [-SecureConnection] [-Credential &lt;PSCredential&gt;] [-Force] [-Throttling &lt;Int32&gt;] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Changes the life cycle of the server object to shutdown and then to running.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="Default" Params="Force Throttling TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="InputObject" Params="InputObject Force Throttling TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer Name SecureConnection Credential Force Throttling TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter server objects. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="true">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="true">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter servers by Name. (regex)</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Force</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Force the server to stop.
If using this parameter the server will wait for the closing of all the active sessions.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Throttling</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>It regulates the number of objects that will be executed in parallel.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLServer -AdminServer wls01.tjrs.local.com | Restart-WLServer -Throttling 2</Cmd>
          <Description>Restart  managed servers on wls01.tjrs.local.com domain. Two at a time.
This example use adminserver information from pipe and default credential previously stored with 'default' alias name.</Description>
          <Output />
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Get-WLCluster -AdminServer wls01.tjrs.local.com -Name cluster01 | Restart-WLServer</Cmd>
          <Description>Restart all managed servers on weblogic cluster 'cluster01'
This example use adminserver information from pipe and default credential previously stored with 'default' alias name.
</Description>
          <Output />
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Restart-WLServer</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Restart-WLServer-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
      <URL>https://wlsutil.codeplex.com/wikipage?title=Restart-WLServer</URL>
      <ArticleIDString>696128</ArticleIDString>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLChangeManager">
      <Name>Get-WLChangeManager</Name>
      <Syntax>
        <string>Get-WLChangeManager [-AdminServer &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Cache] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>Get-WLChangeManager [-InputObject &lt;PSObject&gt;] [-AdminServer &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Cache] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>Get-WLChangeManager [-AdminServer &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Cache] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get information about Managing Configuration Changes</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="Parameter Set 1" Params="AdminServer Credential SecureConnection Cache TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="InputObject" Params="InputObject AdminServer Credential SecureConnection Cache TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer Credential SecureConnection Cache TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Cache</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>User to bypass cache results. Use -Cache:$False</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLChangeManager</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLChangeManager-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Invoke" noun="WlstScript">
      <Name>Invoke-WlstScript</Name>
      <Syntax>
        <string>Invoke-WlstScript [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-ScriptPath &lt;String&gt;] [-ObjectPrefix &lt;String&gt;] [-ObjectDelimiter &lt;Char&gt;] [-PassThru] [-CurrentBaseDir] [-WhatIf] [-ShowScriptOnly] [-Arguments &lt;String[]&gt;]</string>
        <string>Invoke-WlstScript [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-ObjectPrefix &lt;String&gt;] [-ObjectDelimiter &lt;Char&gt;] [-PassThru] [-CurrentBaseDir] [-WhatIf] [-ShowScriptOnly] [-Arguments &lt;String[]&gt;] [-BuiltInScript &lt;String&gt; {Get-JavaVersion.py | Get-Server.py | Get-ServerStart.py | Get-UserMemberOf.py | New-Domain.py | Set-DatasourceTarget.py} ]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Run jython scripts </Synopsis>
        <Description>Create your scripts normally and, if you use the connect method, use it empty in the original position - "connect ()" - without quotes. Enter the path of the python script in the ScriptPath parameter.
CMDLET will use either the pipe or InputObjet domain informations and the credentials of the Credential parameter.</Description>
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="ScriptPath" Params="InputObject Credential SecureConnection ScriptPath ObjectPrefix ObjectDelimiter PassThru CurrentBaseDir WhatIf ShowScriptOnly Arguments Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
        <CommandParameterSetInfo2 Name="BuildinScript" Params="InputObject Credential SecureConnection ObjectPrefix ObjectDelimiter PassThru CurrentBaseDir WhatIf ShowScriptOnly Arguments Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable BuiltInScript" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ScriptPath</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The path to the python script.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>PassThru</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Ignores any attempt to format the output. Shows the raw output in the Result attribute.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>CurrentBaseDir</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Forces the script to run in the current directory it is in. This is required when there are dependencies that depend on the execution path.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Arguments</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Arguments to be used in the python script.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>A variable 'whatif = True' will be inserted at the start of the python script which can be used programmatically in the .py script</Description>
          <DefaultValue>False</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="true" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>BuiltInScript</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ValidateSetAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Predefined generic scripts.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ObjectPrefix</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Defines which prefix will be used to filter the output that will be converted from the CSV format to psCustomObject.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Char" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ObjectDelimiter</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Defines the delimiter for the results of the filter performed with the ObjectPrefix parameter. Outputs will be converted from a CSV format to Object.</Description>
          <DefaultValue>,</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ShowScriptOnly</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>If present the script will NOT run the script but only print the result source code on the screen.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>Get-WLDomain -AdminServer wls-infra.tjrs.local.com | Invoke-WlstScript -BuiltInScript Get-JavaVersion.py -ShowScriptOnly
</Cmd>
          <Description>The -ShowScriptOnly NOT run the script but only print the result source code on the screen.
</Description>
          <Output>whatif = False
domain_hashtable={"Name":"WLDomain01","AdminServer":"wls-infra.tjrs.local.com","AdminTcpPort":7340,"AdminTcpPortSec":"443","Version":"12.2.1.2","En
vironment":"DEV","ServiceName":"AdminServer_DEV-INFRA","MW_HOME":"O:\\Oracle\\WLS_12.2.1\\DEV-INFRA\\MW_HOME","Description":"DEV JEE Equipe de Infr
aestrutura.","ResourceType":"Domain"}
def getServerInfo():
    domainConfig()
    serverNames = cmo.getServers()
    domainRuntime()
    print '==&gt;AdminServer,Name,JavaVersion'
    for name in serverNames:
        try:
            serverName = name.getName()
            cd('/ServerLifeCycleRuntimes/' + serverName)
            state = cmo.getState()
            if state == "SHUTDOWN":
                print  '==&gt;' + domain_hashtable['AdminServer'] + ',' + serverName + ',' + 'SHUTDOWN'
            else:                
                cd("/ServerRuntimes/" + serverName + "/JVMRuntime/" + serverName)
                print  '==&gt;' + domain_hashtable['AdminServer'] + ',' + serverName + ',' + cmo.getJavaVersion()
        except Exception, e:
            print  '==&gt;' + domain_hashtable['AdminServer'] + ',' + serverName + ',' + e
            pass

try:
    connect('user01','**********','t3://wls-infra.dev.tjrs.local.com:7340')
    getServerInfo()
finally:
    disconnect()
    exit(defaultAnswer='y')</Output>
        </Example>
        <Example>
          <Name>Example 2</Name>
          <Cmd>Get-WLDomain -AdminServer wls-infra.tjrs.local.com | Invoke-WlstScript -BuiltInScript Get-JavaVersion.py | Select-Object -ExpandProperty Result</Cmd>
          <Description />
          <Output>AdminServer                         Name                               JavaVersion
-----------                              ----                                   -----------
wls-infra.dev.tjrs.local.com       AdminServer                     1.8.0_121  
wls-infra.dev.tjrs.local.com      infra-core-01.infra.tj.rs       1.7.0_67
wls-infra.dev.tjrs.local.com      infra-dev-21.tjrs.local.com      1.8.0_112  
</Output>
        </Example>
        <Example>
          <Name>Example 3</Name>
          <Cmd>Get-WLDomain -AdminServer wls-domain01.local.com | Invoke-WlstScript -ScriptPath c:\WebLogic\InvokeByPowershell\Set-DsProperties.py -WhatIf -Arguments 'jdbc/d' | fl</Cmd>
          <Description>The -whatIf parameter inserts a variable into the python code that can be used to simulate execution.
The -Arguments parameter passes the arguments to the python script in the order they were entered.</Description>
          <Output>AdminServer : wls-domain01.tjrs.local.com
Result      : 
              Initializing WebLogic Scripting Tool (WLST) ...
              
              Welcome to WebLogic Server Administration Scripting Shell
              
              Type help() for help on available commands
              
              Connecting to t3://wls-domain01.local.com:7307 with userid user01...
              Successfully connected to Admin Server "AdminServer" that belongs to domain "WLDomain01".
              
              Warning: An insecure protocol was used to connect to the server. 
              To ensure on-the-wire security, the SSL port or Admin port should be used instead.
              
              Location changed to edit tree.   
              This is a writable tree with DomainMBean as the root.   
              To make changes you will need to start an edit session via startEdit(). 
              For more help, use help('edit').
              
              Starting an edit session ...
              Started edit session, be sure to save and activate your changes once you are done.
              
              ==&gt; WhatIf is present: 1
              ==&gt; Argument match: jdbc/d 
              
              jdbc/docs
               Set StatementTimeout -1 to 300
               Set ConnectionCreationRetryFrequencySeconds 0 to 120
               Set InactiveConnectionTimeoutSeconds 0 to 10
               Set HighestNumWaiters 2147483647 to 90
              jdbc/docs_back
               Set StatementTimeout -1 to 300
               Set ConnectionCreationRetryFrequencySeconds 0 to 120
               Set InactiveConnectionTimeoutSeconds 0 to 10
               Set HighestNumWaiters 2147483647 to 90
              
              ==&gt; ToChange 2 datasources
              
              Edit session is cancelled successfully.
              Exiting WebLogic Scripting Tool.</Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Invoke-WlstScript</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Invoke-WlstScript-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="New" noun="WLDeployment">
      <Name>New-WLDeployment</Name>
      <Syntax>
        <string>New-WLDeployment [-AdminServer &lt;List`1[String]&gt;] [-Name &lt;String&gt;] [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-Type &lt;String&gt; {application | library} ] [-SecureConnection] [-DeploymentPath &lt;String[]&gt;] [-InFile &lt;String&gt;] [-Targets &lt;String[]&gt;] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Deploy new application or library.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer Name InputObject Credential Type SecureConnection DeploymentPath InFile Targets TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The deployment name.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Type</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateSetAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The deployment type "application" or "library" . 
 </Description>
          <DefaultValue>application</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>DeploymentPath</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The path to the package to be installed. This is the note where the package will remain and should not be removed after installation.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InFile</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The path to the package to be installed. A copy of this package will be sent to the AdminServer uploads directory.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Targets</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The target where this package will be installed.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples>
        <Example>
          <Name>Example 1</Name>
          <Cmd>New-WLDeployment -AdminServer wls01.tjrs.local.com  -Targets cluster01 -InFile D:\_work\temp\jax-rs-2.0.war
</Cmd>
          <Description />
          <Output>messages : {@{message=Deployed the application 'jax-rs-2.0'.; severity=SUCCESS}}
item     : @{name=ADTR-1; id=1; type=deployment; description=[Deployer:149026]deploy application jax-rs-2.0 on infra-dev-21.tjrs.local.com.; 
           operation=deploy; targets=System.Object[]; beginTime=1510854853119; endTime=1510854856119; status=completed; deploymentName=jax-rs-2.0}</Output>
        </Example>
      </Examples>
      <RelatedLinks>
        <RelatedLink>
          <LinkText>New-WLDeployment</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#New-WLDeployment-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="New" noun="WLDomain">
      <Name>New-WLDomain</Name>
      <Syntax>
        <string>New-WLDomain -AdminServer &lt;String&gt; [-Name &lt;String&gt;] -AdminTcpPort &lt;Int32&gt; [-AdminTcpPortSec &lt;Int32&gt;] [-SecureConnection] [-Environment &lt;String&gt;] [-ServiceName &lt;String&gt;] [-Version &lt;Version&gt;] [-MW_HOME &lt;String&gt;] [-Description &lt;String&gt;] [-TimeoutSec &lt;Int32&gt;]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Create a new weblogic domain into inventory.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer Name AdminTcpPort AdminTcpPortSec SecureConnection Environment ServiceName Version MW_HOME Description TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="true" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use the short domain name.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="true" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminTcpPort</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateRangeAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use the TCP port for the HTTP service that the server is running.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminTcpPortSec</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateRangeAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use the TCP port for the HTTPS service that the server is running.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Environment</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Type the environment.
</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>ServiceName</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The name of the service that is running AdminServer.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Version" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Version</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use the Semantic Versioning as well as "12.1.3"</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>MW_HOME</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The middleware installation path.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Description</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>New-WLDomain</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#New-WLDomain-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Remove" noun="WLDeployment">
      <Name>Remove-WLDeployment</Name>
      <Syntax>
        <string>Remove-WLDeployment [-AdminServer &lt;List`1[String]&gt;] [[-Name] &lt;String[]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>Remove-WLDeployment [[-Name] &lt;String[]&gt;] [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Removes an existing deployment.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer Name Credential SecureConnection TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="InputObject" Params="Name InputObject Credential TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter deployment by name.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter deployment objects. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Remove-WLDeployment</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Remove-WLDeployment-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Remove" noun="WLDomain">
      <Name>Remove-WLDomain</Name>
      <Syntax>
        <string>Remove-WLDomain [-AdminServer &lt;List`1[String]&gt;] [-SecureConnection] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>Remove-WLDomain [-InputObject &lt;PSObject&gt;] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Removes an existing weblogic domain from inventory.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer SecureConnection TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="InputObject" Params="InputObject TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter domain objects. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Remove-WLDomain</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Remove-WLDomain-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Remove" noun="WLDatasource">
      <Name>Remove-WLDatasource</Name>
      <Syntax>
        <string>Remove-WLDatasource [-AdminServer &lt;List`1[String]&gt;] [-Credential &lt;PSCredential&gt;] [-SecureConnection] [-Name &lt;String[]&gt;] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
        <string>Remove-WLDatasource [-InputObject &lt;PSObject&gt;] [-Credential &lt;PSCredential&gt;] [-Name &lt;String[]&gt;] [-TimeoutSec &lt;Int32&gt;] [-WhatIf] [-Confirm]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Removes an existing datasource.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="AdminServer" Params="AdminServer Credential SecureConnection Name TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
        <CommandParameterSetInfo2 Name="InputObject" Params="InputObject Credential Name TimeoutSec Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable WhatIf Confirm" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="List`1[String]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>AdminServer</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSCredential" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Credential</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.CredentialAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use credential to access the AdminServer. 
You can use "-Credential (Get-Credential)" or "-Credential (Get-WLCredential)"
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</Description>
          <DefaultValue>(Get-WLCredential -Alias Default)</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>SecureConnection</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</Description>
          <DefaultValue>True</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="String[]" varLen="true" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Name</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Filter datasource by name.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>TimeoutSec</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</Description>
          <DefaultValue>30</DefaultValue>
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>WhatIf</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.AliasAttribute</string>
          </Attributes>
          <Aliases>
            <string>wi</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="SwitchParameter" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>Confirm</Name>
          <Attributes>
            <string>System.Management.Automation.AliasAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases>
            <string>cf</string>
          </Aliases>
          <Description />
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="PSObject" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="true" pipeProp="false" isPos="false" pos="named" globbing="false">
          <Name>InputObject</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Remove-WLDatasource</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Remove-WLDatasource-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Get" noun="WLEnvironment">
      <Name>Get-WLEnvironment</Name>
      <Syntax>
        <string>Get-WLEnvironment</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Get all environment options.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters />
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Get-WLEnvironment</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Get-WLEnvironment-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
    <CmdletObject verb="Set" noun="WLEnvironment">
      <Name>Set-WLEnvironment</Name>
      <Syntax>
        <string>Set-WLEnvironment [[-DomainsInfoPath] &lt;String&gt;] [[-DomainsInfoPathPublish] &lt;String&gt;] [[-WLST] &lt;String&gt;] [[-CacheEnable] &lt;Object&gt; {True | False} ] [[-TTLCacheSeconds] &lt;Int32&gt;] [[-DebugEnable] &lt;Object&gt; {True | False} ]</string>
      </Syntax>
      <GeneralHelp>
        <Synopsis>Set environment options.</Synopsis>
        <Description />
        <Notes />
        <InputType />
        <InputUrl />
        <InputTypeDescription />
        <ReturnType />
        <ReturnUrl />
        <ReturnTypeDescription />
      </GeneralHelp>
      <ParamSets>
        <CommandParameterSetInfo2 Name="__AllParameterSets" Params="DomainsInfoPath DomainsInfoPathPublish WLST CacheEnable TTLCacheSeconds DebugEnable Verbose Debug ErrorAction WarningAction InformationAction ErrorVariable WarningVariable InformationVariable OutVariable OutBuffer PipelineVariable" />
      </ParamSets>
      <Parameters>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="0" globbing="false">
          <Name>DomainsInfoPath</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Path for reading the inventory of the weblogic environment where the information of each domain is stored.
It can be HTTP, local file systems or network.
It should also be the same target of the DomainsInfoPathPublish parameter.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="1" globbing="false">
          <Name>DomainsInfoPathPublish</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Path for inventory writing, to be used by the 'New-Domain' Cmdlet. 
They are the same location as DomainsInfoPath, however, it can be used with another protocol, such as SMB or NFS.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="String" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="2" globbing="false">
          <Name>WLST</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Full path of the wlst.sh or wlst.cmd file.
The WebLogic Scripting Tool (WLST) is a command-line scripting interface that system administrators and operators use to monitor and manage WebLogic Server instances and domains.
https://docs.oracle.com/cd/E13222_01/wls/docs90/config_scripting/using_WLST.html</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Object" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="3" globbing="false">
          <Name>CacheEnable</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateSetAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Enables or disables the cache feature. 
This option allows the module to maintain a cache of queries in the weblogic domains.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Int32" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="4" globbing="false">
          <Name>TTLCacheSeconds</Name>
          <Attributes>
            <string>System.Management.Automation.ParameterAttribute</string>
            <string>System.Management.Automation.ArgumentTypeConverterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>Time, in seconds, that the cache will be considered valid.</Description>
          <DefaultValue />
        </ParameterDescription>
        <ParameterDescription type="Object" varLen="false" required="false" dynamic="false" pipeRemaining="false" pipe="false" pipeProp="false" isPos="true" pos="5" globbing="false">
          <Name>DebugEnable</Name>
          <Attributes>
            <string>System.Management.Automation.ValidateSetAttribute</string>
            <string>System.Management.Automation.ParameterAttribute</string>
          </Attributes>
          <Aliases />
          <Description>The debug option writes additional information to the log file.
Path $env:APPDATA\psWeblogic\log\</Description>
          <DefaultValue />
        </ParameterDescription>
      </Parameters>
      <Examples />
      <RelatedLinks>
        <RelatedLink>
          <LinkText>Set-WLEnvironment</LinkText>
          <LinkUrl>https://leorzz.github.io/psWeblogic/#Set-WLEnvironment-Header</LinkUrl>
        </RelatedLink>
      </RelatedLinks>
      <SupportInformation ad="false" rsat="false" ps2="false" ps3="false" ps4="false" ps5="false" wxp="false" wv="false" w7="false" w8="false" w81="false" w10="false" w2k3s="false" w2k3e="false" w2k3d="false" w2k8s="false" w2k8e="false" w2k8d="false" w2k8r2s="false" w2k8r2e="false" w2k8r2d="false" w2k12s="false" w2k12d="false" w2k12r2s="false" w2k12r2d="false" />
      <Publish>false</Publish>
    </CmdletObject>
  </Cmdlets>
</ModuleObject>