<?xml version="1.0" encoding="utf-8"?><helpItems schema="maml">
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLCacheIndex</command:name>
		<maml:description>
			<maml:para>Show current cache index.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLCacheIndex</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLCacheIndex</maml:name>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLCacheIndex | Format-Table</dev:code>
			<dev:remarks>
				<maml:para />
				<maml:para />
				<maml:para />
				<maml:para>Uri                                                                        ValidTo             FullName                                  
---                                                                        -------             --------                                  
https://wls-infra.tjrs.local.com:443/management/wls/latest/servers     02/03/2016 10:03:54 C:\Users\user01\AppData\Local\Temp\w...
https://wls-infra.tjrs.local.com:443/management/wls/latest/datasources 02/03/2016 10:04:12 C:\Users\user01\AppData\Local\Temp\w...</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLCacheIndex</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLCacheIndex-Header</maml:uri>
		</maml:navigationLink>
		<maml:navigationLink>
			<maml:linkText></maml:linkText>
			<maml:uri></maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLCluster</command:name>
		<maml:description>
			<maml:para>Get cluster object from a domain.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLCluster</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLCluster</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter clusters by Name. (regex)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter clusters by Name. (regex)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>Get-WLCredential -Alias Default</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>True</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cache</maml:name>
			<maml:description>
				<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>True</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLCluster -AdminServer wls.desenv.tjrs.local.com -Credential (Get-WLCredential -Alias myCred)

</dev:code>
			<dev:remarks>
				<maml:para>Return monitoring data.
This example use alternative stored credential.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name            Servers                                                             AdminServer                 
----            -------                                                             -----------                 
infra-desenv-01 {@{name=infra-des-31.tjrs.local.com; state=RUNNING; health=HEALTH_OK}} wls-infra.desenv.tjrs.local.com
infra-desenv-02 {@{name=infra-des-32.tjrs.local.com; state=RUNNING; health=HEALTH_OK}} wls-infra.desenv.tjrs.local.com</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDomain DES-INFRA | Get-WLCluster</dev:code>
			<dev:remarks>
				<maml:para>Return monitoring data getting domain value from pipeline.
This example use adminserver information from pipe and default credential previously stored with &#39;default&#39; alias name.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name            Servers                                                             AdminServer                 
----            -------                                                             -----------                 
infra-desenv-01 {@{name=infra-des-31.tjrs.local.com; state=RUNNING; health=HEALTH_OK}} wls-infra.desenv.tjrs.local.com
infra-desenv-02 {@{name=infra-des-32.tjrs.local.com; state=RUNNING; health=HEALTH_OK}} wls-infra.desenv.tjrs.local.com</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLCluster</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLCluster-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLDatasource</command:name>
		<maml:description>
			<maml:para>Get datasource object from a domain.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLDatasource</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLDatasource</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter datasource by name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Management</maml:name>
				<maml:description>
					<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-WLDatasource</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter datasource by name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Management</maml:name>
				<maml:description>
					<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>(Get-WLCredential -Alias Default)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>True</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cache</maml:name>
			<maml:description>
				<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>True</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter datasource by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Management</maml:name>
			<maml:description>
				<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDatasource -AdminServer wls01.desenv.tjrs.local.com -Management</dev:code>
			<dev:remarks>
				<maml:para>Get management objects of all datasources from a domain.
This example use default credential previously stored with &#39;default&#39; alias name.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name        Targets                           
----        -------                           
jdbc/ds1   {infra-desenv-01, infra-desenv-02}
jdbc/ds2   {infra-desenv-01}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDomain -AdminServer wls01.desenv.tjrs.local.com | Get-WLDatasource
This example use adminserver information from pipe and default credential previously stored with &apos;default&apos; alias name.</dev:code>
			<dev:remarks>
				<maml:para />
				<maml:para />
				<maml:para />
				<maml:para>Name        Type   
----        ----   
jdbc/ds1 Generic
jdbc/ds2   Generic</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLDatasource</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLDatasource-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLDeployment</command:name>
		<maml:description>
			<maml:para>Get deployment object from a domain.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLDeployment</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLDeployment</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter deployment by name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Filter deployment by type &quot;application or library&quot;. When using this parameter the result may contain attributes specific to each type.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Management</maml:name>
				<maml:description>
					<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-WLDeployment</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter deployment by name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Filter deployment by type &quot;application or library&quot;. When using this parameter the result may contain attributes specific to each type.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Management</maml:name>
				<maml:description>
					<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Filter deployment by type &quot;application or library&quot;. When using this parameter the result may contain attributes specific to each type.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cache</maml:name>
			<maml:description>
				<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter deployment by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Management</maml:name>
			<maml:description>
				<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDeployment -AdminServer wls01.desenv.tjrs.local.com -Management</dev:code>
			<dev:remarks>
				<maml:para>Get management objects of all deployments from a domain.
This example use default credential previously stored with &#39;default&#39; alias name.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDatasource -AdminServer wls01.prod.tjrs.local.com -Management | % {$_.test()} | select -ExpandProperty messages</dev:code>
			<dev:remarks>
				<maml:para>Rua a test of all datasoucers in a domain.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>message                                                                                    severity
-------                                                                                    --------
Data Source &apos;jdbc/ds01&apos; is working correctly.                                              SUCCESS 
Data Source &apos;jdbc/ds02&apos; is working correctly.                                              SUCCESS 
Data Source &apos;jdbc/ds03&apos;. The remote server returned an error: (400) Bad Request.           ERROR   </maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDatasource -AdminServer wls01.tjrs.local.com -Management | % {$_.Reset()} | select -ExpandProperty messages</dev:code>
			<dev:remarks>
				<maml:para>Restarts all datasouces a domain.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>message                                                  severity
-------                                                  --------
Data Source &apos;jdbc/ds01&apos; was successfully reset.          SUCCESS 
Data Source &apos;jdbc/ds02&apos; was successfully reset.          SUCCESS </maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLDeployment</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLDeployment-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLDomain</command:name>
		<maml:description>
			<maml:para>Get domain object.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLDomain</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLDomain</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Filters by AdminServer. Use the DNS name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter by domain name. Use the short domain name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Environment</maml:name>
				<maml:description>
					<maml:para>Filter results by environment.
This parameter is the environment field registered in the inventory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Filters the domain version. Use the Semantic Versioning as well as &quot;12.1.3&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">Version[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Filters by AdminServer. Use the DNS name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter by domain name. Use the short domain name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cache</maml:name>
			<maml:description>
				<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Environment</maml:name>
			<maml:description>
				<maml:para>Filter results by environment.
This parameter is the environment field registered in the inventory.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Version</maml:name>
			<maml:description>
				<maml:para>Filters the domain version. Use the Semantic Versioning as well as &quot;12.1.3&quot;</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">Version[]</command:parameterValue>
			<dev:type>
				<maml:name>Version[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDomain | select -First 2</dev:code>
			<dev:remarks>
				<maml:para />
				<maml:para />
				<maml:para />
				<maml:para>Name            : wls01
AdminServer     : wls01.desenv.tjrs.local.com
AdminTcpPort    : 7304
AdminTcpPortSec : 443
Version         : 12.1.3
Environment      : Desenv
ResourceType    : domain

Name            : wls01
AdminServer     : wls01.desenv.tjrs.local.com
AdminTcpPort    : 7304
AdminTcpPortSec : 443
Version         : 12.1.3
Environment      : Desenv
ResourceType    : domain</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDomain -Name wls | ft
</dev:code>
			<dev:remarks>
				<maml:para />
				<maml:para />
				<maml:para />
				<maml:para>Name             AdminServer                    AdminTcpPort AdminTcpPortSec Version Environment ResourceType
----             -----------                    ------------ --------------- ------- ---------- ------------
wls01         wls01.desenv.tjrs.local.com           7304 443             12.1.3  Desenv     domain      
wls02         wls02.desenv.tjrs.local.com           7304 443             12.1.3  Desenv     domain      </maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLDomain</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLDomain-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLjob</command:name>
		<maml:description>
			<maml:para>Get job object from a domain.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLjob</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLjob</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cache</maml:name>
			<maml:description>
				<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLjob</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLjob-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLServer</command:name>
		<maml:description>
			<maml:para>Get server object from a domain.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLServer</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLServer</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter servers by Name. (regex)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAdminServer</maml:name>
				<maml:description>
					<maml:para>Use to include AdminServer in the result.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Management</maml:name>
				<maml:description>
					<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-WLServer</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter servers by Name. (regex)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAdminServer</maml:name>
				<maml:description>
					<maml:para>Use to include AdminServer in the result.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Management</maml:name>
				<maml:description>
					<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-WLServer</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter servers by Name. (regex)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>IncludeAdminServer</maml:name>
				<maml:description>
					<maml:para>Use to include AdminServer in the result.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Management</maml:name>
				<maml:description>
					<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter servers by Name. (regex)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cache</maml:name>
			<maml:description>
				<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>IncludeAdminServer</maml:name>
			<maml:description>
				<maml:para>Use to include AdminServer in the result.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Management</maml:name>
			<maml:description>
				<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLServer</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLServer-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLTarget</command:name>
		<maml:description>
			<maml:para>Get target object from a domain.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLTarget</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLTarget</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter targets by Name. (regex)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>Filter Target by type. (Server or Cluster)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Management</maml:name>
				<maml:description>
					<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter targets by Name. (regex)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>Filter Target by type. (Server or Cluster)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cache</maml:name>
			<maml:description>
				<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Management</maml:name>
			<maml:description>
				<maml:para>Use to access the management interface.
By default the result is simplified and shows health at runtime.
With this parameter the result will be more informative objects and lifecycle methods.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLTarget</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLTarget-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-WLCredential</command:name>
		<maml:description>
			<maml:para>Create new credential to AdminServer and store into user profile.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>WLCredential</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>Create a new credential and stored in your profile under $env:APPDATA\psWeblogic\security
If you create a credential with alias &#39; Default&#39; then you need not inform it in cmdlets that already will locate it automatically .</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-WLCredential</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>UserName</maml:name>
				<maml:description>
					<maml:para>Use username to the new credential.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Password</maml:name>
				<maml:description>
					<maml:para>Type your password</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Use a name to identify this credential.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Optionally use an alternative way to store the new credentials .</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>If a credential with the same alias exists this parameter forced to overwritten .</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>UserName</maml:name>
			<maml:description>
				<maml:para>Use username to the new credential.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Optionally use an alternative way to store the new credentials .</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>If a credential with the same alias exists this parameter forced to overwritten .</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>Password</maml:name>
			<maml:description>
				<maml:para>Type your password</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Use a name to identify this credential.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>New-WLCredential -UserName weblogic -Name Default</dev:code>
			<dev:remarks>
				<maml:para>Creates a default credential to be used automatically whenever the -Credential parameter is not informed .
The password is required to execute this command</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Alias        : Default
CreationTime : 29/02/2016 17:24:49
UserName     : weblogic
Password     : System.Security.SecureString</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>New-WLCredential -Name cred01 -UserName user01</dev:code>
			<dev:remarks>
				<maml:para>Create a credential to user user01</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Alias  CreationTime        UserName                     Password
-----  ------------        --------                     --------
user01 08/03/2016 12:16:08 user01   System.Security.SecureString</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>New-WLCredential</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#New-WLCredential-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-WLCredential</command:name>
		<maml:description>
			<maml:para>Remove weblogic credential stored at default or alternative path.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>WLCredential</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-WLCredential</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Remove-WLCredential -Name user01</dev:code>
			<dev:remarks>
				<maml:para>Remove stored credential width alias user01.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Remove-WLCredential</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Remove-WLCredential-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Repair-WLCacheIndex</command:name>
		<maml:description>
			<maml:para>Rebuild the index cache to current powershell session.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Repair</command:verb>
		<command:noun>WLCacheIndex</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Repair-WLCacheIndex</maml:name>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Repair-WLCacheIndex</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Repair-WLCacheIndex-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Start-WLServer</command:name>
		<maml:description>
			<maml:para>Changes the lifecycle of the server object to running.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Start</command:verb>
		<command:noun>WLServer</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Start-WLServer</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter server objects. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter servers by Name. (regex)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ResumeOnly</maml:name>
				<maml:description>
					<maml:para>It only start the server if it is in Suspend mode.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Throttling</maml:name>
				<maml:description>
					<maml:para>It regulates the number of objects that will be executed in parallel.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter server objects. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter servers by Name. (regex)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ResumeOnly</maml:name>
			<maml:description>
				<maml:para>It only start the server if it is in Suspend mode.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Throttling</maml:name>
			<maml:description>
				<maml:para>It regulates the number of objects that will be executed in parallel.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLServer -AdminServer wls01.tjrs.local.com | Start-WLServer -Throttling 2</dev:code>
			<dev:remarks>
				<maml:para>Start  managed servers on wls01.tjrs.local.com domain. Two at a time.
This example use adminserver information from pipe and default credential previously stored with &#39;default&#39; alias name.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLCluster -AdminServer wls01.tjrs.local.com -Name cluster01 | Start-WLServer</dev:code>
			<dev:remarks>
				<maml:para>Start all managed servers on weblogic cluster &#39;cluster01&#39;.
This example use adminserver information from pipe and default credential previously stored with &#39;default&#39; alias name.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Start-WLServer</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Start-WLServer-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Stop-WLServer</command:name>
		<maml:description>
			<maml:para>Changes the lifecycle of the server object to shutdown.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Stop</command:verb>
		<command:noun>WLServer</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Stop-WLServer</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter server objects. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter servers by Name. (regex)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SuspendOnly</maml:name>
				<maml:description>
					<maml:para>It only suspends the server without stopping it.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Force the server to stop.
If using this parameter the server will wait for the closing of all the active sessions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Throttling</maml:name>
				<maml:description>
					<maml:para>It regulates the number of objects that will be executed in parallel.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter server objects. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter servers by Name. (regex)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SuspendOnly</maml:name>
			<maml:description>
				<maml:para>It only suspends the server without stopping it.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Force the server to stop.
If using this parameter the server will wait for the closing of all the active sessions.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Throttling</maml:name>
			<maml:description>
				<maml:para>It regulates the number of objects that will be executed in parallel.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLServer -AdminServer wls01.tjrs.local.com | Stop-WLServer -Throttling 2</dev:code>
			<dev:remarks>
				<maml:para>Stop  managed servers on wls01.tjrs.local.com domain. Two at a time.
This example use adminserver information from pipe and default credential previously stored with &#39;default&#39; alias name.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLCluster -AdminServer wls01.tjrs.local.com -Name cluster01 | Stop-WLServer</dev:code>
			<dev:remarks>
				<maml:para>Stop all managed servers on weblogic cluster &#39;cluster01&#39;.
This example use adminserver information from pipe and default credential previously stored with &#39;default&#39; alias name.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Stop-WLServer</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Stop-WLServer-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLCredential</command:name>
		<maml:description>
			<maml:para>Get weblogic credential stored at default or alternative path.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLCredential</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLCredential</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Use alternative path.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Path</maml:name>
			<maml:description>
				<maml:para>Use alternative path.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>$env:APPDATA\psWeblogic\security</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLCredential</dev:code>
			<dev:remarks>
				<maml:para>Get all stored credentials.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Alias   CreationTime        UserName                       Password
-----   ------------        --------                       --------
Default 29/02/2016 17:24:49 weblogic   System.Security.SecureString
myCred  01/03/2016 17:47:06 mike       System.Security.SecureString
user01  08/03/2016 12:16:08 user01     System.Security.SecureString
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLCredential</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLCredential-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-WLDatasource</command:name>
		<maml:description>
			<maml:para>Create a new Datasource.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>WLDatasource</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>A datasource can be created from template, response file or other datasource.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-WLDatasource</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name to new datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Url</maml:name>
				<maml:description>
					<maml:para>Use the Url (connection string) to be used in the new datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputPasswordAsObject</maml:name>
				<maml:description>
					<maml:para>Use a object or a set of objects[name=&lt;datasource name&gt;, password=&lt;SecureString&gt;]
That is, at a minimum the attributes name=&lt;datasource name&gt; and password=&lt;SecureString&gt;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputUrlAsObject</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Targets</maml:name>
				<maml:description>
					<maml:para>Use the target where the new datasource will be applied.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>JndiNames</maml:name>
				<maml:description>
					<maml:para>Use the JNDI name to this datasource. If not specified it will be the same as the name parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsCredential</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinCapacity</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxCapacity</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InitialCapacity</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsUser</maml:name>
				<maml:description>
					<maml:para>Use the database username to datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsPassword</maml:name>
				<maml:description>
					<maml:para>User the database password to datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SkeepChecks</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-WLDatasource</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name to new datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Url</maml:name>
				<maml:description>
					<maml:para>Use the Url (connection string) to be used in the new datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputPasswordAsObject</maml:name>
				<maml:description>
					<maml:para>Use a object or a set of objects[name=&lt;datasource name&gt;, password=&lt;SecureString&gt;]
That is, at a minimum the attributes name=&lt;datasource name&gt; and password=&lt;SecureString&gt;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputUrlAsObject</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Targets</maml:name>
				<maml:description>
					<maml:para>Use the target where the new datasource will be applied.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>JndiNames</maml:name>
				<maml:description>
					<maml:para>Use the JNDI name to this datasource. If not specified it will be the same as the name parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsCredential</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinCapacity</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxCapacity</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InitialCapacity</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsUser</maml:name>
				<maml:description>
					<maml:para>Use the database username to datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsPassword</maml:name>
				<maml:description>
					<maml:para>User the database password to datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SkeepChecks</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>New-WLDatasource</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Name to new datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Url</maml:name>
				<maml:description>
					<maml:para>Use the Url (connection string) to be used in the new datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputPasswordAsObject</maml:name>
				<maml:description>
					<maml:para>Use a object or a set of objects[name=&lt;datasource name&gt;, password=&lt;SecureString&gt;]
That is, at a minimum the attributes name=&lt;datasource name&gt; and password=&lt;SecureString&gt;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InputUrlAsObject</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DatasourceType</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Targets</maml:name>
				<maml:description>
					<maml:para>Use the target where the new datasource will be applied.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>JndiNames</maml:name>
				<maml:description>
					<maml:para>Use the JNDI name to this datasource. If not specified it will be the same as the name parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsCredential</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MinCapacity</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MaxCapacity</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InitialCapacity</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsUser</maml:name>
				<maml:description>
					<maml:para>Use the database username to datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DsPassword</maml:name>
				<maml:description>
					<maml:para>User the database password to datasource.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SkeepChecks</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Name to new datasource.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DsUser</maml:name>
			<maml:description>
				<maml:para>Use the database username to datasource.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DsPassword</maml:name>
			<maml:description>
				<maml:para>User the database password to datasource.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
			<dev:type>
				<maml:name>SecureString</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Targets</maml:name>
			<maml:description>
				<maml:para>Use the target where the new datasource will be applied.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>JndiNames</maml:name>
			<maml:description>
				<maml:para>Use the JNDI name to this datasource. If not specified it will be the same as the name parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Url</maml:name>
			<maml:description>
				<maml:para>Use the Url (connection string) to be used in the new datasource.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InputPasswordAsObject</maml:name>
			<maml:description>
				<maml:para>Use a object or a set of objects[name=&lt;datasource name&gt;, password=&lt;SecureString&gt;]
That is, at a minimum the attributes name=&lt;datasource name&gt; and password=&lt;SecureString&gt;</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InputUrlAsObject</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DsCredential</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MinCapacity</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MaxCapacity</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InitialCapacity</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SkeepChecks</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>DatasourceType</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>$dsTemplate = Get-WLDatasource -AdminServer wls01.desenv.tjrs.local.com -Management -Name jdbc/ds01
$dsTemplate.targets = @(&quot;server01&quot;,&quot;cluster02&quot;)
$dsTemplate | New-WLDatasource -AdminServer wls02.desenv.tjrs.local.com</dev:code>
			<dev:remarks>
				<maml:para>Takes a datasource as a model.
Changes targets property. 
</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>Name     : jdbc/ds01
Targets  : {infra-desenv-01}
Messages : {@{message=Successfully created &apos;jdbc/ds01&apos;.; severity=SUCCESS}}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>New-WLDatasource</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#New-WLDatasource-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Restart-WLServer</command:name>
		<maml:description>
			<maml:para>Changes the life cycle of the server object to shutdown and then to running.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Restart</command:verb>
		<command:noun>WLServer</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Restart-WLServer</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Force the server to stop.
If using this parameter the server will wait for the closing of all the active sessions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Throttling</maml:name>
				<maml:description>
					<maml:para>It regulates the number of objects that will be executed in parallel.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Restart-WLServer</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter server objects. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Force the server to stop.
If using this parameter the server will wait for the closing of all the active sessions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Throttling</maml:name>
				<maml:description>
					<maml:para>It regulates the number of objects that will be executed in parallel.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Restart-WLServer</maml:name>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter servers by Name. (regex)</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>Force the server to stop.
If using this parameter the server will wait for the closing of all the active sessions.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Throttling</maml:name>
				<maml:description>
					<maml:para>It regulates the number of objects that will be executed in parallel.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter server objects. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="true" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter servers by Name. (regex)</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Force</maml:name>
			<maml:description>
				<maml:para>Force the server to stop.
If using this parameter the server will wait for the closing of all the active sessions.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Throttling</maml:name>
			<maml:description>
				<maml:para>It regulates the number of objects that will be executed in parallel.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLServer -AdminServer wls01.tjrs.local.com | Restart-WLServer -Throttling 2</dev:code>
			<dev:remarks>
				<maml:para>Restart  managed servers on wls01.tjrs.local.com domain. Two at a time.
This example use adminserver information from pipe and default credential previously stored with &#39;default&#39; alias name.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLCluster -AdminServer wls01.tjrs.local.com -Name cluster01 | Restart-WLServer</dev:code>
			<dev:remarks>
				<maml:para>Restart all managed servers on weblogic cluster &#39;cluster01&#39;
This example use adminserver information from pipe and default credential previously stored with &#39;default&#39; alias name.
</maml:para>
				<maml:para />
				<maml:para />
				<maml:para></maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Restart-WLServer</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Restart-WLServer-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLChangeManager</command:name>
		<maml:description>
			<maml:para>Get information about Managing Configuration Changes</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLChangeManager</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLChangeManager</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-WLChangeManager</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Get-WLChangeManager</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Cache</maml:name>
				<maml:description>
					<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Cache</maml:name>
			<maml:description>
				<maml:para>User to bypass cache results. Use -Cache:$False</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLChangeManager</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLChangeManager-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Invoke-WlstScript</command:name>
		<maml:description>
			<maml:para>Run jython scripts </maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Invoke</command:verb>
		<command:noun>WlstScript</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para>Create your scripts normally and, if you use the connect method, use it empty in the original position - &quot;connect ()&quot; - without quotes. Enter the path of the python script in the ScriptPath parameter.
CMDLET will use either the pipe or InputObjet domain informations and the credentials of the Credential parameter.</maml:para>
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Invoke-WlstScript</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ScriptPath</maml:name>
				<maml:description>
					<maml:para>The path to the python script.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ObjectPrefix</maml:name>
				<maml:description>
					<maml:para>Defines which prefix will be used to filter the output that will be converted from the CSV format to psCustomObject.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ObjectDelimiter</maml:name>
				<maml:description>
					<maml:para>Defines the delimiter for the results of the filter performed with the ObjectPrefix parameter. Outputs will be converted from a CSV format to Object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Char</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Ignores any attempt to format the output. Shows the raw output in the Result attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CurrentBaseDir</maml:name>
				<maml:description>
					<maml:para>Forces the script to run in the current directory it is in. This is required when there are dependencies that depend on the execution path.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>A variable &#39;whatif = True&#39; will be inserted at the start of the python script which can be used programmatically in the .py script</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowScriptOnly</maml:name>
				<maml:description>
					<maml:para>If present the script will NOT run the script but only print the result source code on the screen.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Arguments</maml:name>
				<maml:description>
					<maml:para>Arguments to be used in the python script.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Invoke-WlstScript</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ObjectPrefix</maml:name>
				<maml:description>
					<maml:para>Defines which prefix will be used to filter the output that will be converted from the CSV format to psCustomObject.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ObjectDelimiter</maml:name>
				<maml:description>
					<maml:para>Defines the delimiter for the results of the filter performed with the ObjectPrefix parameter. Outputs will be converted from a CSV format to Object.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Char</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PassThru</maml:name>
				<maml:description>
					<maml:para>Ignores any attempt to format the output. Shows the raw output in the Result attribute.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CurrentBaseDir</maml:name>
				<maml:description>
					<maml:para>Forces the script to run in the current directory it is in. This is required when there are dependencies that depend on the execution path.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para>A variable &#39;whatif = True&#39; will be inserted at the start of the python script which can be used programmatically in the .py script</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ShowScriptOnly</maml:name>
				<maml:description>
					<maml:para>If present the script will NOT run the script but only print the result source code on the screen.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Arguments</maml:name>
				<maml:description>
					<maml:para>Arguments to be used in the python script.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>BuiltInScript</maml:name>
				<maml:description>
					<maml:para>Predefined generic scripts.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ScriptPath</maml:name>
			<maml:description>
				<maml:para>The path to the python script.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>PassThru</maml:name>
			<maml:description>
				<maml:para>Ignores any attempt to format the output. Shows the raw output in the Result attribute.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>CurrentBaseDir</maml:name>
			<maml:description>
				<maml:para>Forces the script to run in the current directory it is in. This is required when there are dependencies that depend on the execution path.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Arguments</maml:name>
			<maml:description>
				<maml:para>Arguments to be used in the python script.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para>A variable &#39;whatif = True&#39; will be inserted at the start of the python script which can be used programmatically in the .py script</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>False</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>BuiltInScript</maml:name>
			<maml:description>
				<maml:para>Predefined generic scripts.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ObjectPrefix</maml:name>
			<maml:description>
				<maml:para>Defines which prefix will be used to filter the output that will be converted from the CSV format to psCustomObject.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ObjectDelimiter</maml:name>
			<maml:description>
				<maml:para>Defines the delimiter for the results of the filter performed with the ObjectPrefix parameter. Outputs will be converted from a CSV format to Object.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Char</command:parameterValue>
			<dev:type>
				<maml:name>Char</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>,</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ShowScriptOnly</maml:name>
			<maml:description>
				<maml:para>If present the script will NOT run the script but only print the result source code on the screen.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDomain -AdminServer wls-infra.tjrs.local.com | Invoke-WlstScript -BuiltInScript Get-JavaVersion.py -ShowScriptOnly
</dev:code>
			<dev:remarks>
				<maml:para>The -ShowScriptOnly NOT run the script but only print the result source code on the screen.
</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>whatif = False
domain_hashtable={&quot;Name&quot;:&quot;WLDomain01&quot;,&quot;AdminServer&quot;:&quot;wls-infra.tjrs.local.com&quot;,&quot;AdminTcpPort&quot;:7340,&quot;AdminTcpPortSec&quot;:&quot;443&quot;,&quot;Version&quot;:&quot;12.2.1.2&quot;,&quot;En
vironment&quot;:&quot;DEV&quot;,&quot;ServiceName&quot;:&quot;AdminServer_DEV-INFRA&quot;,&quot;MW_HOME&quot;:&quot;O:\\Oracle\\WLS_12.2.1\\DEV-INFRA\\MW_HOME&quot;,&quot;Description&quot;:&quot;DEV JEE Equipe de Infr
aestrutura.&quot;,&quot;ResourceType&quot;:&quot;Domain&quot;}
def getServerInfo():
    domainConfig()
    serverNames = cmo.getServers()
    domainRuntime()
    print &apos;==&gt;AdminServer,Name,JavaVersion&apos;
    for name in serverNames:
        try:
            serverName = name.getName()
            cd(&apos;/ServerLifeCycleRuntimes/&apos; + serverName)
            state = cmo.getState()
            if state == &quot;SHUTDOWN&quot;:
                print  &apos;==&gt;&apos; + domain_hashtable[&apos;AdminServer&apos;] + &apos;,&apos; + serverName + &apos;,&apos; + &apos;SHUTDOWN&apos;
            else:                
                cd(&quot;/ServerRuntimes/&quot; + serverName + &quot;/JVMRuntime/&quot; + serverName)
                print  &apos;==&gt;&apos; + domain_hashtable[&apos;AdminServer&apos;] + &apos;,&apos; + serverName + &apos;,&apos; + cmo.getJavaVersion()
        except Exception, e:
            print  &apos;==&gt;&apos; + domain_hashtable[&apos;AdminServer&apos;] + &apos;,&apos; + serverName + &apos;,&apos; + e
            pass

try:
    connect(&apos;user01&apos;,&apos;**********&apos;,&apos;t3://wls-infra.dev.tjrs.local.com:7340&apos;)
    getServerInfo()
finally:
    disconnect()
    exit(defaultAnswer=&apos;y&apos;)</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 2  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDomain -AdminServer wls-infra.tjrs.local.com | Invoke-WlstScript -BuiltInScript Get-JavaVersion.py | Select-Object -ExpandProperty Result</dev:code>
			<dev:remarks>
				<maml:para />
				<maml:para />
				<maml:para />
				<maml:para>AdminServer                         Name                               JavaVersion
-----------                              ----                                   -----------
wls-infra.dev.tjrs.local.com       AdminServer                     1.8.0_121  
wls-infra.dev.tjrs.local.com      infra-core-01.infra.tj.rs       1.7.0_67
wls-infra.dev.tjrs.local.com      infra-dev-21.tjrs.local.com      1.8.0_112  
</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
		<command:example>
			<maml:title>--------------------------  Example 3  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>Get-WLDomain -AdminServer wls-domain01.local.com | Invoke-WlstScript -ScriptPath c:\WebLogic\InvokeByPowershell\Set-DsProperties.py -WhatIf -Arguments &apos;jdbc/d&apos; | fl</dev:code>
			<dev:remarks>
				<maml:para>The -whatIf parameter inserts a variable into the python code that can be used to simulate execution.
The -Arguments parameter passes the arguments to the python script in the order they were entered.</maml:para>
				<maml:para />
				<maml:para />
				<maml:para>AdminServer : wls-domain01.tjrs.local.com
Result      : 
              Initializing WebLogic Scripting Tool (WLST) ...
              
              Welcome to WebLogic Server Administration Scripting Shell
              
              Type help() for help on available commands
              
              Connecting to t3://wls-domain01.local.com:7307 with userid user01...
              Successfully connected to Admin Server &quot;AdminServer&quot; that belongs to domain &quot;WLDomain01&quot;.
              
              Warning: An insecure protocol was used to connect to the server. 
              To ensure on-the-wire security, the SSL port or Admin port should be used instead.
              
              Location changed to edit tree.   
              This is a writable tree with DomainMBean as the root.   
              To make changes you will need to start an edit session via startEdit(). 
              For more help, use help(&apos;edit&apos;).
              
              Starting an edit session ...
              Started edit session, be sure to save and activate your changes once you are done.
              
              ==&gt; WhatIf is present: 1
              ==&gt; Argument match: jdbc/d 
              
              jdbc/docs
               Set StatementTimeout -1 to 300
               Set ConnectionCreationRetryFrequencySeconds 0 to 120
               Set InactiveConnectionTimeoutSeconds 0 to 10
               Set HighestNumWaiters 2147483647 to 90
              jdbc/docs_back
               Set StatementTimeout -1 to 300
               Set ConnectionCreationRetryFrequencySeconds 0 to 120
               Set InactiveConnectionTimeoutSeconds 0 to 10
               Set HighestNumWaiters 2147483647 to 90
              
              ==&gt; ToChange 2 datasources
              
              Edit session is cancelled successfully.
              Exiting WebLogic Scripting Tool.</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Invoke-WlstScript</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Invoke-WlstScript-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-WLDeployment</command:name>
		<maml:description>
			<maml:para>Deploy new application or library.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>WLDeployment</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-WLDeployment</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>The deployment name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Type</maml:name>
				<maml:description>
					<maml:para>The deployment type &quot;application&quot; or &quot;library&quot; . 
 </maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeploymentPath</maml:name>
				<maml:description>
					<maml:para>The path to the package to be installed. This is the note where the package will remain and should not be removed after installation.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InFile</maml:name>
				<maml:description>
					<maml:para>The path to the package to be installed. A copy of this package will be sent to the AdminServer uploads directory.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Targets</maml:name>
				<maml:description>
					<maml:para>The target where this package will be installed.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>The deployment name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Type</maml:name>
			<maml:description>
				<maml:para>The deployment type &quot;application&quot; or &quot;library&quot; . 
 </maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>application</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>DeploymentPath</maml:name>
			<maml:description>
				<maml:para>The path to the package to be installed. This is the note where the package will remain and should not be removed after installation.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>InFile</maml:name>
			<maml:description>
				<maml:para>The path to the package to be installed. A copy of this package will be sent to the AdminServer uploads directory.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Targets</maml:name>
			<maml:description>
				<maml:para>The target where this package will be installed.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
		<command:example>
			<maml:title>--------------------------  Example 1  --------------------------</maml:title>
			<maml:introduction>
				<maml:paragraph>PS C:\&gt;</maml:paragraph>
			</maml:introduction>
			<dev:code>New-WLDeployment -AdminServer wls01.tjrs.local.com  -Targets cluster01 -InFile D:\_work\temp\jax-rs-2.0.war
</dev:code>
			<dev:remarks>
				<maml:para />
				<maml:para />
				<maml:para />
				<maml:para>messages : {@{message=Deployed the application &apos;jax-rs-2.0&apos;.; severity=SUCCESS}}
item     : @{name=ADTR-1; id=1; type=deployment; description=[Deployer:149026]deploy application jax-rs-2.0 on infra-dev-21.tjrs.local.com.; 
           operation=deploy; targets=System.Object[]; beginTime=1510854853119; endTime=1510854856119; status=completed; deploymentName=jax-rs-2.0}</maml:para>
			</dev:remarks>
			<command:commandLines>
				<command:commandLine>
					<command:commandText>
						<maml:para />
					</command:commandText>
				</command:commandLine>
			</command:commandLines>
		</command:example>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>New-WLDeployment</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#New-WLDeployment-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>New-WLDomain</command:name>
		<maml:description>
			<maml:para>Create a new weblogic domain into inventory.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>New</command:verb>
		<command:noun>WLDomain</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>New-WLDomain</maml:name>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Use the short domain name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminTcpPort</maml:name>
				<maml:description>
					<maml:para>Use the TCP port for the HTTP service that the server is running.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminTcpPortSec</maml:name>
				<maml:description>
					<maml:para>Use the TCP port for the HTTPS service that the server is running.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Environment</maml:name>
				<maml:description>
					<maml:para>Type the environment.
</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>ServiceName</maml:name>
				<maml:description>
					<maml:para>The name of the service that is running AdminServer.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Version</maml:name>
				<maml:description>
					<maml:para>Use the Semantic Versioning as well as &quot;12.1.3&quot;</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Version</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>MW_HOME</maml:name>
				<maml:description>
					<maml:para>The middleware installation path.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Use the short domain name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminTcpPort</maml:name>
			<maml:description>
				<maml:para>Use the TCP port for the HTTP service that the server is running.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminTcpPortSec</maml:name>
			<maml:description>
				<maml:para>Use the TCP port for the HTTPS service that the server is running.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Environment</maml:name>
			<maml:description>
				<maml:para>Type the environment.
</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>ServiceName</maml:name>
			<maml:description>
				<maml:para>The name of the service that is running AdminServer.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Version</maml:name>
			<maml:description>
				<maml:para>Use the Semantic Versioning as well as &quot;12.1.3&quot;</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Version</command:parameterValue>
			<dev:type>
				<maml:name>Version</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>MW_HOME</maml:name>
			<maml:description>
				<maml:para>The middleware installation path.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Description</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>New-WLDomain</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#New-WLDomain-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-WLDeployment</command:name>
		<maml:description>
			<maml:para>Removes an existing deployment.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>WLDeployment</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-WLDeployment</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter deployment by name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-WLDeployment</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter deployment by name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter deployment objects. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter deployment by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter deployment objects. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Remove-WLDeployment</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Remove-WLDeployment-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-WLDomain</command:name>
		<maml:description>
			<maml:para>Removes an existing weblogic domain from inventory.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>WLDomain</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-WLDomain</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-WLDomain</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter domain objects. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter domain objects. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Remove-WLDomain</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Remove-WLDomain-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Remove-WLDatasource</command:name>
		<maml:description>
			<maml:para>Removes an existing datasource.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Remove</command:verb>
		<command:noun>WLDatasource</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Remove-WLDatasource</maml:name>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>AdminServer</maml:name>
				<maml:description>
					<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SecureConnection</maml:name>
				<maml:description>
					<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter datasource by name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
		<command:syntaxItem>
			<maml:name>Remove-WLDatasource</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Credential</maml:name>
				<maml:description>
					<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
				<maml:name>Name</maml:name>
				<maml:description>
					<maml:para>Filter datasource by name.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TimeoutSec</maml:name>
				<maml:description>
					<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WhatIf</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Confirm</maml:name>
				<maml:description>
					<maml:para />
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>AdminServer</maml:name>
			<maml:description>
				<maml:para>Determine the AdminServer target.
Suggestions will be returned from the result of the Get-WLDomain Command.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">List`1[String]</command:parameterValue>
			<dev:type>
				<maml:name>List`1[String]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Credential</maml:name>
			<maml:description>
				<maml:para>Use credential to access the AdminServer. 
You can use &quot;-Credential (Get-Credential)&quot; or &quot;-Credential (Get-WLCredential)&quot;
To use Get-WLCredential you need run New-WLCredentials command to secure and store credentials in your profile.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
			<dev:type>
				<maml:name>PSCredential</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>(Get-WLCredential -Alias Default)</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>SecureConnection</maml:name>
			<maml:description>
				<maml:para>Use to connect securely (TLS/SSL).
The TCP port should be returning in AdminTcpPortSec property of the Get-WLDomain command.</maml:para>
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>True</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
			<maml:name>Name</maml:name>
			<maml:description>
				<maml:para>Filter datasource by name.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
			<dev:type>
				<maml:name>String[]</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>TimeoutSec</maml:name>
			<maml:description>
				<maml:para>Period of time in seconds that will be allowed to elapse in adminserver before the event is to take place.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue>30</dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>WhatIf</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
			<maml:name>Confirm</maml:name>
			<maml:description>
				<maml:para />
			</maml:description>
			<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
			<dev:type>
				<maml:name>SwitchParameter</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="named">
			<maml:name>InputObject</maml:name>
			<maml:description>
				<maml:para>Use to enter objects such as domain, server and target in case you do not use the pipe. 
The input from the pipe is the same as this parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">PSObject</command:parameterValue>
			<dev:type>
				<maml:name>PSObject</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Remove-WLDatasource</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Remove-WLDatasource-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Get-WLEnvironment</command:name>
		<maml:description>
			<maml:para>Get all environment options.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Get</command:verb>
		<command:noun>WLEnvironment</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Get-WLEnvironment</maml:name>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Get-WLEnvironment</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Get-WLEnvironment-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<!--Generated by PS Cmdlet Help Editor-->
	<command:details>
		<command:name>Set-WLEnvironment</command:name>
		<maml:description>
			<maml:para>Set environment options.</maml:para>
		</maml:description>
		<maml:copyright>
			<maml:para />
		</maml:copyright>
		<command:verb>Set</command:verb>
		<command:noun>WLEnvironment</command:noun>
		<dev:version />
	</command:details>
	<maml:description>
		<maml:para />
	</maml:description>
	<command:syntax>
		<command:syntaxItem>
			<maml:name>Set-WLEnvironment</maml:name>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>DomainsInfoPath</maml:name>
				<maml:description>
					<maml:para>Path for reading the inventory of the weblogic environment where the information of each domain is stored.
It can be HTTP, local file systems or network.
It should also be the same target of the DomainsInfoPathPublish parameter.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>DomainsInfoPathPublish</maml:name>
				<maml:description>
					<maml:para>Path for inventory writing, to be used by the &#39;New-Domain&#39; Cmdlet. 
They are the same location as DomainsInfoPath, however, it can be used with another protocol, such as SMB or NFS.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>WLST</maml:name>
				<maml:description>
					<maml:para>Full path of the wlst.sh or wlst.cmd file.
The WebLogic Scripting Tool (WLST) is a command-line scripting interface that system administrators and operators use to monitor and manage WebLogic Server instances and domains.
https://docs.oracle.com/cd/E13222_01/wls/docs90/config_scripting/using_WLST.html</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>CacheEnable</maml:name>
				<maml:description>
					<maml:para>Enables or disables the cache feature. 
This option allows the module to maintain a cache of queries in the weblogic domains.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>TTLCacheSeconds</maml:name>
				<maml:description>
					<maml:para>Time, in seconds, that the cache will be considered valid.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
				<maml:name>DebugEnable</maml:name>
				<maml:description>
					<maml:para>The debug option writes additional information to the log file.
Path $env:APPDATA\psWeblogic\log\</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			</command:parameter>
		</command:syntaxItem>
	</command:syntax>
	<command:parameters>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
			<maml:name>DomainsInfoPath</maml:name>
			<maml:description>
				<maml:para>Path for reading the inventory of the weblogic environment where the information of each domain is stored.
It can be HTTP, local file systems or network.
It should also be the same target of the DomainsInfoPathPublish parameter.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
			<maml:name>DomainsInfoPathPublish</maml:name>
			<maml:description>
				<maml:para>Path for inventory writing, to be used by the &#39;New-Domain&#39; Cmdlet. 
They are the same location as DomainsInfoPath, however, it can be used with another protocol, such as SMB or NFS.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
			<maml:name>WLST</maml:name>
			<maml:description>
				<maml:para>Full path of the wlst.sh or wlst.cmd file.
The WebLogic Scripting Tool (WLST) is a command-line scripting interface that system administrators and operators use to monitor and manage WebLogic Server instances and domains.
https://docs.oracle.com/cd/E13222_01/wls/docs90/config_scripting/using_WLST.html</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
			<dev:type>
				<maml:name>String</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
			<maml:name>CacheEnable</maml:name>
			<maml:description>
				<maml:para>Enables or disables the cache feature. 
This option allows the module to maintain a cache of queries in the weblogic domains.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
			<maml:name>TTLCacheSeconds</maml:name>
			<maml:description>
				<maml:para>Time, in seconds, that the cache will be considered valid.</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
			<dev:type>
				<maml:name>Int32</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
		<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
			<maml:name>DebugEnable</maml:name>
			<maml:description>
				<maml:para>The debug option writes additional information to the log file.
Path $env:APPDATA\psWeblogic\log\</maml:para>
			</maml:description>
			<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
			<dev:type>
				<maml:name>Object</maml:name>
				<maml:uri/>
			</dev:type>
			<dev:defaultValue></dev:defaultValue>
		</command:parameter>
	</command:parameters>
	<command:inputTypes>
		<command:inputType>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:inputType>
	</command:inputTypes>
	<command:returnValues>
		<command:returnValue>
			<dev:type>
				<maml:name></maml:name>
				<maml:uri></maml:uri>
				<maml:description/>
			</dev:type>
			<maml:description>
<maml:para />
			</maml:description>
		</command:returnValue>
	</command:returnValues>
	<command:terminatingErrors></command:terminatingErrors>
	<command:nonTerminatingErrors></command:nonTerminatingErrors>
	<maml:alertSet>
		<maml:title></maml:title>
		<maml:alert>
			<maml:para />
		</maml:alert>
	</maml:alertSet>
	<command:examples>
	</command:examples>
	<maml:relatedLinks>
		<maml:navigationLink>
			<maml:linkText>Set-WLEnvironment</maml:linkText>
			<maml:uri>https://leorzz.github.io/psWeblogic/#Set-WLEnvironment-Header</maml:uri>
		</maml:navigationLink>
	</maml:relatedLinks>
</command:command>
</helpItems>